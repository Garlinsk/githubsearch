{"version":3,"file":"ng-add.js","sourceRoot":"","sources":["../ng-add.ts"],"names":[],"mappings":";;;AAAA,+CAAgE;AAChE,2DAIoC;AAGpC,SAAS,YAAY,CAAC,IAAU;IAC9B,MAAM,aAAa,GAAG,CAAC,eAAe,EAAE,gBAAgB,CAAC,CAAC;IAC1D,MAAM,IAAI,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAEhE,MAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,IAAI,YAAY,KAAK,IAAI,EAAE;QACzB,MAAM,IAAI,gCAAmB,CAAC,6BAA6B,CAAC,CAAC;KAC9D;IACD,MAAM,OAAO,GAAG,YAAY,CAAC,QAAQ,EAAE,CAAC;IAExC,IAAI,SAAoB,CAAC;IACzB,IAAI;QACF,SAAS,GAAI,gBAAS,CAAC,OAAO,EAAE,oBAAa,CAAC,KAAK,CAAqB,CAAC;KAC1E;IAAC,OAAO,CAAC,EAAE;QACV,MAAM,IAAI,gCAAmB,CAAC,gCAAgC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;KAC7E;IAED,OAAO;QACL,IAAI;QACJ,SAAS;KACV,CAAC;AACJ,CAAC;AAKY,QAAA,KAAK,GAAG,CAAC,OAAqB,EAAE,EAAE,CAAC,CAC9C,IAAU,EACV,QAA0B,EAC1B,EAAE;IACF,MAAM,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;IAE9D,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;QACpB,IAAI,SAAS,CAAC,cAAc,EAAE;YAC5B,OAAO,CAAC,OAAO,GAAG,SAAS,CAAC,cAAc,CAAC;SAC5C;aAAM;YACL,MAAM,IAAI,gCAAmB,CAC3B,qEAAqE,CACtE,CAAC;SACH;KACF;IAED,MAAM,OAAO,GAAG,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACpD,IAAI,CAAC,OAAO,EAAE;QACZ,MAAM,IAAI,gCAAmB,CAC3B,gEAAgE,CACjE,CAAC;KACH;IAED,IAAI,OAAO,CAAC,WAAW,KAAK,aAAa,EAAE;QACzC,MAAM,IAAI,gCAAmB,CAC3B,0EAA0E,CAC3E,CAAC;KACH;IAED,IACE,CAAC,OAAO,CAAC,SAAS;QAClB,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK;QACxB,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO;QAChC,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,EAC3C;QACA,MAAM,IAAI,gCAAmB,CAC3B,4FAA4F,OAAO,CAAC,OAAO,mBAAmB,CAC/H,CAAC;KACH;IAED,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG;QAC5B,OAAO,EAAE,4BAA4B;QACrC,OAAO,EAAE,EAAE;KACZ,CAAC;IAEF,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;IAClE,OAAO,IAAI,CAAC;AACd,CAAC,CAAC","sourcesContent":["import { JsonParseMode, parseJson } from '@angular-devkit/core';\nimport {\n  SchematicContext,\n  SchematicsException,\n  Tree\n} from '@angular-devkit/schematics';\nimport { Workspace } from './interfaces';\n\nfunction getWorkspace(host: Tree): { path: string; workspace: Workspace } {\n  const possibleFiles = ['/angular.json', '/.angular.json'];\n  const path = possibleFiles.filter(path => host.exists(path))[0];\n\n  const configBuffer = host.read(path);\n  if (configBuffer === null) {\n    throw new SchematicsException(`Could not find angular.json`);\n  }\n  const content = configBuffer.toString();\n\n  let workspace: Workspace;\n  try {\n    workspace = (parseJson(content, JsonParseMode.Loose) as {}) as Workspace;\n  } catch (e) {\n    throw new SchematicsException(`Could not parse angular.json: ` + e.message);\n  }\n\n  return {\n    path,\n    workspace\n  };\n}\ninterface NgAddOptions {\n  project: string;\n}\n\nexport const ngAdd = (options: NgAddOptions) => (\n  tree: Tree,\n  _context: SchematicContext\n) => {\n  const { path: workspacePath, workspace } = getWorkspace(tree);\n\n  if (!options.project) {\n    if (workspace.defaultProject) {\n      options.project = workspace.defaultProject;\n    } else {\n      throw new SchematicsException(\n        'No Angular project selected and no default project in the workspace'\n      );\n    }\n  }\n\n  const project = workspace.projects[options.project];\n  if (!project) {\n    throw new SchematicsException(\n      'The specified Angular project is not defined in this workspace'\n    );\n  }\n\n  if (project.projectType !== 'application') {\n    throw new SchematicsException(\n      `Deploy requires an Angular project type of \"application\" in angular.json`\n    );\n  }\n\n  if (\n    !project.architect ||\n    !project.architect.build ||\n    !project.architect.build.options ||\n    !project.architect.build.options.outputPath\n  ) {\n    throw new SchematicsException(\n      `Cannot read the output path (architect.build.options.outputPath) of the Angular project \"${options.project}\" in angular.json`\n    );\n  }\n\n  project.architect['deploy'] = {\n    builder: 'angular-cli-ghpages:deploy',\n    options: {}\n  };\n\n  tree.overwrite(workspacePath, JSON.stringify(workspace, null, 2));\n  return tree;\n};\n"]}