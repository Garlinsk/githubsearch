{"version":3,"file":"builder.js","sourceRoot":"","sources":["../../deploy/builder.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yDAImC;AAEnC,yDAA2C;AAC3C,wDAA+B;AAK/B,kBAAe,yBAAa,CAC1B,CAAO,OAAe,EAAE,OAAuB,EAA0B,EAAE;IACzE,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;QACnB,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;KACnE;IAED,MAAM,WAAW,GAAG;QAClB,IAAI,EAAE,OAAO,CAAC,WAAW,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,OAAO,mBAAmB;KAC1E,CAAC;IAEF,IAAI;QACF,MAAM,iBAAM,CAAC,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;KACrD;IAAC,OAAO,CAAC,EAAE;QACV,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,4CAA4C,CAAC,CAAC;QACnE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QAChC,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;KAC3B;IAED,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AAC3B,CAAC,CAAA,CACF,CAAC","sourcesContent":["import {\n  BuilderContext,\n  BuilderOutput,\n  createBuilder\n} from '@angular-devkit/architect';\n\nimport * as engine from '../engine/engine';\nimport deploy from './actions';\nimport { Schema } from './schema';\n\n// Call the createBuilder() function to create a builder. This mirrors\n// createJobHandler() but add typings specific to Architect Builders.\nexport default createBuilder(\n  async (options: Schema, context: BuilderContext): Promise<BuilderOutput> => {\n    if (!context.target) {\n      throw new Error('Cannot deploy the application without a target');\n    }\n\n    const buildTarget = {\n      name: options.buildTarget || `${context.target.project}:build:production`\n    };\n\n    try {\n      await deploy(engine, context, buildTarget, options);\n    } catch (e) {\n      context.logger.error('‚ùå An error occurred when trying to deploy:');\n      context.logger.error(e.message);\n      return { success: false };\n    }\n\n    return { success: true };\n  }\n);\n"]}