{"ast":null,"code":"import { User } from '../user';\nimport { Repository } from '../repository';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserRequestApiService = /*#__PURE__*/(() => {\n  class UserRequestApiService {\n    constructor(http) {\n      this.http = http;\n      this.repositories = [];\n      this.repoUsername = '';\n      this.user = new User('', '', '', '', 0, 0, 0, '');\n      this.setUsername();\n      this.repositories = [];\n    }\n\n    setUsername(username = '') {\n      this.repositories.splice(0, this.repositories.length);\n\n      if (username == '') {\n        this.repoUsername = \"Garlinsk\";\n      } else {\n        this.repoUsername = username;\n      }\n    }\n\n    getRepositories() {\n      let promise = new Promise((resolve, reject) => {\n        this.http.get(`https://api.github.com/users/${this.repoUsername}/repos`).toPromise().then(response => {\n          Object.values(response).forEach(element => {\n            this.repositories.push(new Repository(element.name, element.description, element.html_url));\n          });\n          resolve('done');\n        }, error => {\n          this.repositories = [];\n          reject(error);\n        });\n      });\n      return promise;\n    }\n\n    getRepositoryUser() {\n      let promise = new Promise((resolve, reject) => {\n        this.http.get(`https://api.github.com/users/${this.repoUsername}`).toPromise().then(response => {\n          this.user.username = response.login;\n          this.user.avatarUrl = response.avatar_url;\n          this.user.bio = response.bio;\n          this.user.publicRepos = response.public_repos;\n          this.user.followers = response.followers;\n          this.user.following = response.following;\n          resolve('done');\n        }, error => {\n          reject(error);\n        });\n      });\n      return promise;\n    }\n\n  }\n\n  UserRequestApiService.ɵfac = function UserRequestApiService_Factory(t) {\n    return new (t || UserRequestApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  UserRequestApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserRequestApiService,\n    factory: UserRequestApiService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserRequestApiService;\n})();","map":null,"metadata":{},"sourceType":"module"}